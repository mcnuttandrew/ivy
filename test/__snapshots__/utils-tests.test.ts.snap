// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`#fillTemplateMapWithDefaults 1`] = `
Object {
  "$schema": "https://vega.github.io/schema/vega-lite/v4.json",
  "encoding": Object {
    "x": Object {
      "field": null,
      "scale": Object {
        "zero": true,
      },
      "type": "quantitative",
    },
    "y": Object {
      "field": null,
      "scale": Object {
        "zero": true,
      },
      "type": "quantitative",
    },
  },
  "mark": Object {
    "color": "steelblue",
    "size": 15,
    "tooltip": true,
    "type": "point",
  },
}
`;

exports[`#fillTemplateMapWithDefaults 2`] = `
Object {
  "paramValues": Object {
    "Color": null,
    "Radius": 15,
    "Single Color": "\\"steelblue\\"",
    "Zeroes": "true",
    "colorType": "\\"ordinal\\"",
    "xDim": null,
    "xType": "\\"quantitative\\"",
    "yDim": null,
    "yType": "\\"quantitative\\"",
  },
  "systemValues": Object {
    "dataTransforms": Array [],
    "viewsToMaterialize": Object {},
  },
}
`;

exports[`#fillTemplateMapWithDefaults 3`] = `
Object {
  "$schema": "https://vega.github.io/schema/vega/v5.json",
  "autosize": "fit",
  "data": Array [
    Object {
      "name": "table",
      "transform": Array [
        Object {
          "as": Array [
            "pieAg",
          ],
          "fields": Array [
            null,
          ],
          "groupby": Array [
            null,
          ],
          "ops": Array [
            "mean",
          ],
          "type": "aggregate",
        },
        Object {
          "endAngle": 6.29,
          "field": "pieAg",
          "sort": true,
          "startAngle": 0,
          "type": "pie",
        },
        Object {
          "as": "tooltip",
          "expr": "datum.[category] + ': ' + datum.pieAg",
          "type": "formula",
        },
      ],
      "values": "myData",
    },
  ],
  "height": 200,
  "marks": Array [
    Object {
      "encode": Object {
        "enter": Object {
          "cornerRadius": Object {
            "value": 0,
          },
          "endAngle": Object {
            "field": "endAngle",
          },
          "fill": Object {
            "field": null,
            "scale": "color",
          },
          "innerRadius": Object {
            "value": 60,
          },
          "outerRadius": Object {
            "signal": "width / 2",
          },
          "startAngle": Object {
            "field": "startAngle",
          },
          "tooltip": Object {
            "field": "tooltip",
          },
          "x": Object {
            "signal": "width / 2",
          },
          "y": Object {
            "signal": "height / 2",
          },
        },
      },
      "from": Object {
        "data": "table",
      },
      "type": "arc",
    },
    Object {
      "encode": Object {
        "enter": Object {
          "align": Object {
            "value": "center",
          },
          "baseline": Object {
            "value": "middle",
          },
          "fill": Object {
            "value": "#000",
          },
          "radius": Object {
            "scale": "r",
            "value": 1.3,
          },
          "text": Object {
            "field": null,
          },
          "theta": Object {
            "signal": "(datum.startAngle + datum.endAngle)/2",
          },
          "x": Object {
            "field": Object {
              "group": "width",
            },
            "mult": 0.5,
          },
          "y": Object {
            "field": Object {
              "group": "height",
            },
            "mult": 0.5,
          },
        },
      },
      "from": Object {
        "data": "table",
      },
      "type": "text",
    },
  ],
  "padding": 50,
  "scales": Array [
    Object {
      "domain": Object {
        "data": "table",
        "field": null,
      },
      "name": "color",
      "range": Object {
        "scheme": "category20",
      },
      "type": "ordinal",
    },
    Object {
      "domain": Array [
        0,
        1,
      ],
      "name": "r",
      "range": Array [
        90,
        100,
      ],
      "type": "sqrt",
      "zero": false,
    },
  ],
  "width": 200,
}
`;

exports[`#fillTemplateMapWithDefaults 4`] = `
Object {
  "paramValues": Object {
    "DonutChart": "60",
    "Sort": "true",
    "aggregate": "\\"mean\\"",
    "category": null,
    "colorScheme": "\\"category20\\"",
    "value": null,
  },
  "systemValues": Object {
    "dataTransforms": Array [],
    "viewsToMaterialize": Object {},
  },
}
`;

exports[`#fillTemplateMapWithDefaults 5`] = `
Object {
  "$schema": "hydra-data-table",
  "columns": Array [],
}
`;

exports[`#fillTemplateMapWithDefaults 6`] = `
Object {
  "paramValues": Object {
    "columns": Array [],
  },
  "systemValues": Object {
    "dataTransforms": Array [],
    "viewsToMaterialize": Object {},
  },
}
`;

exports[`#setTemplateValues 1`] = `
"{
  \\"$schema\\": \\"https://vega.github.io/schema/vega/v5.json\\",
  \\"width\\": 200,
  \\"height\\": 200,
  \\"padding\\": 50,
  \\"autosize\\": \\"fit\\",
  \\"data\\": [
    {
      \\"name\\": \\"table\\",
      \\"values\\": \\"myData\\",
      \\"transform\\": [
        {
          \\"type\\": \\"aggregate\\",
          \\"groupby\\": [\\"CATEGORY_TEST\\"],
          \\"fields\\": [\\"VALUE_TEST\\"],
          \\"ops\\": [\\"[aggregate]\\"],
          \\"as\\": [\\"pieAg\\"]
        },
        {
          \\"type\\": \\"pie\\",
          \\"field\\": \\"pieAg\\",
          \\"startAngle\\": 0,
          \\"endAngle\\": 6.29,
          \\"sort\\": \\"[Sort]\\"
        },
        {
          \\"type\\": \\"formula\\",
          \\"expr\\": \\"datum.CATEGORY_TEST + ': ' + datum.pieAg\\",
          \\"as\\": \\"tooltip\\"
        }
      ]
    }
  ],
  \\"scales\\": [
    {
      \\"name\\": \\"color\\",
      \\"type\\": \\"ordinal\\",
      \\"domain\\": {\\"data\\": \\"table\\", \\"field\\": \\"CATEGORY_TEST\\"},
      \\"range\\": {\\"scheme\\": \\"[colorScheme]\\"}
    },
    {
      \\"name\\": \\"r\\",
      \\"type\\": \\"sqrt\\",
      \\"domain\\": [0, 1],
      \\"zero\\": false,
      \\"range\\": [90, 100]
    }
  ],
  \\"marks\\": [
    {
      \\"type\\": \\"arc\\",
      \\"from\\": {\\"data\\": \\"table\\"},
      \\"encode\\": {
        \\"enter\\": {
          \\"fill\\": {\\"scale\\": \\"color\\", \\"field\\": \\"CATEGORY_TEST\\"},
          \\"x\\": {\\"signal\\": \\"width / 2\\"},
          \\"y\\": {\\"signal\\": \\"height / 2\\"},
          \\"startAngle\\": {\\"field\\": \\"startAngle\\"},
          \\"endAngle\\": {\\"field\\": \\"endAngle\\"},
          \\"innerRadius\\": {\\"value\\": \\"[DonutChart]\\"},
          \\"outerRadius\\": {\\"signal\\": \\"width / 2\\"},
          \\"cornerRadius\\": {\\"value\\": 0},
          \\"tooltip\\": {\\"field\\": \\"tooltip\\"}
        }
      }
    },
    {
      \\"type\\": \\"text\\",
      \\"from\\": {\\"data\\": \\"table\\"},
      \\"encode\\": {
        \\"enter\\": {
          \\"x\\": {\\"field\\": {\\"group\\": \\"width\\"}, \\"mult\\": 0.5},
          \\"y\\": {\\"field\\": {\\"group\\": \\"height\\"}, \\"mult\\": 0.5},
          \\"radius\\": {\\"scale\\": \\"r\\", \\"value\\": 1.3},
          \\"theta\\": {\\"signal\\": \\"(datum.startAngle + datum.endAngle)/2\\"},
          \\"fill\\": {\\"value\\": \\"#000\\"},
          \\"align\\": {\\"value\\": \\"center\\"},
          \\"baseline\\": {\\"value\\": \\"middle\\"},
          \\"text\\": {\\"field\\": \\"CATEGORY_TEST\\"}
        }
      }
    }
  ]
}"
`;

exports[`#setTemplateValues 2`] = `
"{
  \\"$schema\\": \\"https://vega.github.io/schema/vega-lite/v4.json\\",
  \\"mark\\": {
    \\"type\\": \\"point\\",
    \\"tooltip\\": true,
    \\"size\\": \\"[Radius]\\",
    \\"color\\": {
      \\"$cond\\": {
        \\"true\\": \\"[Single Color]\\",
        \\"false\\": null,
        \\"query\\": \\"!parameters.Color\\"
      }
    }
  },
  \\"encoding\\": {
    \\"x\\": {\\"field\\": \\"xDim_TEST\\", \\"type\\": \\"[xType]\\", \\"scale\\": {\\"zero\\": \\"[Zeroes]\\"}},
    \\"y\\": {\\"field\\": \\"yDim_TEST\\", \\"type\\": \\"[yType]\\", \\"scale\\": {\\"zero\\": \\"[Zeroes]\\"}},
    \\"color\\": {
      \\"$cond\\": {
        \\"query\\": \\"parameters.Color\\",
        \\"true\\": {\\"field\\": \\"[Color]\\", \\"type\\": \\"[colorType]\\"},
        \\"false\\": null
      }
    }
  }
}"
`;

exports[`#setTemplateValues 3`] = `
"{
  \\"$schema\\": \\"hydra-data-table\\",
  \\"columns\\": [\\"\\\\\\"xDim_TEST\\\\\\"\\",\\"\\\\\\"yDim_TEST\\\\\\"\\"]
}"
`;

exports[`serialize/deserialize template 1`] = `
"{
  \\"$schema\\": \\"https://kind-goldwasser-f3ce26.netlify.com/assets/ivy.0.0.1.json\\",
  \\"templateName\\": \\"pie chart\\",
  \\"templateDescription\\": \\"A popular way to show part-to-whole relationships, can express as donut chart or a pie chart.\\",
  \\"templateAuthor\\": \\"Ivy Authors\\",
  \\"templateLanguage\\": \\"vega\\",
  \\"widgets\\": [
    {\\"name\\": \\"category\\", \\"type\\": \\"DataTarget\\", \\"config\\": {\\"allowedTypes\\": [\\"DIMENSION\\"], \\"required\\": true}},
    {
      \\"name\\": \\"Sort\\",
      \\"type\\": \\"Switch\\",
      \\"config\\": {\\"active\\": \\"true\\", \\"inactive\\": \\"false\\", \\"defaultsToActive\\": true}
    },
    {\\"name\\": \\"value\\", \\"type\\": \\"DataTarget\\", \\"config\\": {\\"allowedTypes\\": [\\"MEASURE\\"], \\"required\\": true}},
    {
      \\"name\\": \\"aggregate\\",
      \\"type\\": \\"List\\",
      \\"config\\": {
        \\"allowedValues\\": [
          {\\"display\\": \\"count\\", \\"value\\": \\"\\\\\\"count\\\\\\"\\"},
          {\\"display\\": \\"missing\\", \\"value\\": \\"\\\\\\"missing\\\\\\"\\"},
          {\\"display\\": \\"distinct\\", \\"value\\": \\"\\\\\\"distinct\\\\\\"\\"},
          {\\"display\\": \\"sum\\", \\"value\\": \\"\\\\\\"sum\\\\\\"\\"},
          {\\"display\\": \\"mean\\", \\"value\\": \\"\\\\\\"mean\\\\\\"\\"},
          {\\"display\\": \\"median\\", \\"value\\": \\"\\\\\\"median\\\\\\"\\"},
          {\\"display\\": \\"min\\", \\"value\\": \\"\\\\\\"min\\\\\\"\\"},
          {\\"display\\": \\"max\\", \\"value\\": \\"\\\\\\"max\\\\\\"\\"}
        ],
        \\"defaultValue\\": \\"\\\\\\"mean\\\\\\"\\"
      }
    },
    {\\"name\\": \\"OtherSettingsSection\\", \\"type\\": \\"Section\\", \\"config\\": null},
    {
      \\"name\\": \\"colorScheme\\",
      \\"type\\": \\"List\\",
      \\"config\\": {
        \\"allowedValues\\": [
          {\\"display\\": \\"accent\\", \\"value\\": \\"\\\\\\"accent\\\\\\"\\"},
          {\\"display\\": \\"category10\\", \\"value\\": \\"\\\\\\"category10\\\\\\"\\"},
          {\\"display\\": \\"category20\\", \\"value\\": \\"\\\\\\"category20\\\\\\"\\"},
          {\\"display\\": \\"category20b\\", \\"value\\": \\"\\\\\\"category20b\\\\\\"\\"},
          {\\"display\\": \\"category20c\\", \\"value\\": \\"\\\\\\"category20c\\\\\\"\\"},
          {\\"display\\": \\"dark2\\", \\"value\\": \\"\\\\\\"dark2\\\\\\"\\"},
          {\\"display\\": \\"paired\\", \\"value\\": \\"\\\\\\"paired\\\\\\"\\"},
          {\\"display\\": \\"pastel1\\", \\"value\\": \\"\\\\\\"pastel1\\\\\\"\\"},
          {\\"display\\": \\"pastel2\\", \\"value\\": \\"\\\\\\"pastel2\\\\\\"\\"},
          {\\"display\\": \\"set1\\", \\"value\\": \\"\\\\\\"set1\\\\\\"\\"},
          {\\"display\\": \\"set2\\", \\"value\\": \\"\\\\\\"set2\\\\\\"\\"},
          {\\"display\\": \\"set3\\", \\"value\\": \\"\\\\\\"set3\\\\\\"\\"},
          {\\"display\\": \\"tableau10\\", \\"value\\": \\"\\\\\\"tableau10\\\\\\"\\"},
          {\\"display\\": \\"tableau20\\", \\"value\\": \\"\\\\\\"tableau20\\\\\\"\\"}
        ],
        \\"defaultValue\\": \\"\\\\\\"category20\\\\\\"\\"
      }
    },
    {
      \\"name\\": \\"DonutChart\\",
      \\"type\\": \\"Switch\\",
      \\"config\\": {\\"active\\": \\"60\\", \\"inactive\\": \\"0\\", \\"defaultsToActive\\": true}
    }
  ],
  \\"code\\": \\"SEE BODY\\"
}"
`;

exports[`serialize/deserialize template 2`] = `
Object {
  "code": "SEE CODE EDITOR",
  "customCards": undefined,
  "disallowFanOut": undefined,
  "templateAuthor": "Ivy Authors",
  "templateDescription": "A popular way to show part-to-whole relationships, can express as donut chart or a pie chart.",
  "templateLanguage": "vega",
  "templateName": "pie chart",
  "widgets": Array [
    Object {
      "config": Object {
        "allowedTypes": Array [
          "DIMENSION",
        ],
        "required": true,
      },
      "name": "category",
      "type": "DataTarget",
    },
    Object {
      "config": Object {
        "active": "true",
        "defaultsToActive": true,
        "inactive": "false",
      },
      "name": "Sort",
      "type": "Switch",
    },
    Object {
      "config": Object {
        "allowedTypes": Array [
          "MEASURE",
        ],
        "required": true,
      },
      "name": "value",
      "type": "DataTarget",
    },
    Object {
      "config": Object {
        "allowedValues": Array [
          Object {
            "display": "count",
            "value": "\\"count\\"",
          },
          Object {
            "display": "missing",
            "value": "\\"missing\\"",
          },
          Object {
            "display": "distinct",
            "value": "\\"distinct\\"",
          },
          Object {
            "display": "sum",
            "value": "\\"sum\\"",
          },
          Object {
            "display": "mean",
            "value": "\\"mean\\"",
          },
          Object {
            "display": "median",
            "value": "\\"median\\"",
          },
          Object {
            "display": "min",
            "value": "\\"min\\"",
          },
          Object {
            "display": "max",
            "value": "\\"max\\"",
          },
        ],
        "defaultValue": "\\"mean\\"",
      },
      "name": "aggregate",
      "type": "List",
    },
    Object {
      "config": null,
      "name": "OtherSettingsSection",
      "type": "Section",
    },
    Object {
      "config": Object {
        "allowedValues": Array [
          Object {
            "display": "accent",
            "value": "\\"accent\\"",
          },
          Object {
            "display": "category10",
            "value": "\\"category10\\"",
          },
          Object {
            "display": "category20",
            "value": "\\"category20\\"",
          },
          Object {
            "display": "category20b",
            "value": "\\"category20b\\"",
          },
          Object {
            "display": "category20c",
            "value": "\\"category20c\\"",
          },
          Object {
            "display": "dark2",
            "value": "\\"dark2\\"",
          },
          Object {
            "display": "paired",
            "value": "\\"paired\\"",
          },
          Object {
            "display": "pastel1",
            "value": "\\"pastel1\\"",
          },
          Object {
            "display": "pastel2",
            "value": "\\"pastel2\\"",
          },
          Object {
            "display": "set1",
            "value": "\\"set1\\"",
          },
          Object {
            "display": "set2",
            "value": "\\"set2\\"",
          },
          Object {
            "display": "set3",
            "value": "\\"set3\\"",
          },
          Object {
            "display": "tableau10",
            "value": "\\"tableau10\\"",
          },
          Object {
            "display": "tableau20",
            "value": "\\"tableau20\\"",
          },
        ],
        "defaultValue": "\\"category20\\"",
      },
      "name": "colorScheme",
      "type": "List",
    },
    Object {
      "config": Object {
        "active": "60",
        "defaultsToActive": true,
        "inactive": "0",
      },
      "name": "DonutChart",
      "type": "Switch",
    },
  ],
}
`;
